@page "/Results"
@inject IDbContextFactory<SurveyContext> DbFactory
@using SEval4.Models

<h3>Survey Results</h3>

<table class="table">
    <thead>
        <tr>
            <th>
                AgeGroup
            </th>
            <th>
                EducationGroup
            </th>
            <th>
                ProfessionalExperience
            </th>
            <th>
                HasFormalTraining
            </th>
            <th>
               HasInformalTraining
            </th>
            <th>
               PhishingConfidence
            </th>
            <th>
               HumanConfidence
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            using var context = DbFactory.CreateDbContext();
            foreach (var survey in Surveys)
            {
                <tr>
                    <td>
                        @context.AgeGroups.SingleOrDefault(ag => ag.Value == survey.AgeGroup).Text
                    </td>
                    <td>
                        @context.EducationGroups.SingleOrDefault(ag => ag.Value == survey.EducationGroup).Text
                    </td>
                    <td>
                        @context.YearGroups.SingleOrDefault(ag => ag.Value == survey.ProfessionalExperience).Text
                    </td>
                    <td>
                        @(Convert.ToBoolean(survey?.HasFormalTraining))
                    </td>
                    <td>
                        @(Convert.ToBoolean(survey?.HasInformalTraining))
                    </td>
                    <td>
                        @context.ConfidenceGroups.SingleOrDefault(ag => ag.Value == survey.PhishingConfidence).Text
                    </td>
                    <td>
                        @context.ConfidenceGroups.SingleOrDefault(ag => ag.Value == survey.HumanConfidence).Text
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {

    private List<ParticipantSurvey> Surveys = new List<ParticipantSurvey>();

    protected override async Task OnParametersSetAsync()
    {
        using var context = DbFactory.CreateDbContext();
        
        Surveys = await context.ParticipantSurveys.ToListAsync();
        await base.OnParametersSetAsync();
    }
}

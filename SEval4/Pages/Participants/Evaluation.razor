@page "/Evaluation/{StudyGroup:int?}"
@using SEval4.Models;

<div id="evaluation">

    <h3>Evaluation</h3>

    <div id="context">
        <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam iaculis mauris a tempor luctus. Proin pellentesque id nunc et ultrices. Maecenas varius sodales sem, sit amet mattis libero lobortis sit amet. Donec varius, lacus et posuere gravida, metus elit feugiat velit, id porttitor dolor arcu ac dui. Morbi luctus vehicula risus ut efficitur. Fusce mollis venenatis ipsum, vel porttitor quam ullamcorper sit amet. Fusce quis erat mattis, hendrerit velit vel, tristique urna. Nunc ac pretium lorem. Aenean sit amet sapien gravida, tempor magna ac, tempus ipsum.

            Quisque neque orci, accumsan in dolor sed, elementum interdum dolor. Maecenas vitae orci euismod libero efficitur vehicula. Duis eu purus ante. Suspendisse potenti. Phasellus consequat nisl vel fermentum consectetur. Nullam eu lacus nulla. Sed porta metus in arcu sagittis euismod. Praesent eu arcu eget dui iaculis porttitor. Pellentesque facilisis massa non mauris efficitur iaculis sed eu augue. Phasellus nunc mi, venenatis eget tortor in, sodales scelerisque nisl.

            Suspendisse pellentesque massa nec neque suscipit semper. Vestibulum varius nulla a ipsum lacinia, nec efficitur ante tristique. Quisque ac aliquam leo. Morbi pretium interdum arcu, eu congue ligula eleifend ac. Quisque magna felis, laoreet id lectus at, dignissim interdum nisl. Integer fermentum accumsan dignissim. Nulla at purus id odio faucibus interdum non vitae enim. Vivamus sed semper odio.
        </p>
    </div>

    <div id="responses">

    </div>

    @* Study group specific elements *@
    @switch (StudyGroup)
    {
        case 1:
            {
                <div id="seadmForm">

                </div>

            }
            break;
        case 2:
            {
                <div id="feedbackWindow">

                </div>
            }
            break;

        default:
            break;
    }


    <b>@ErrorMsg</b>
</div>

@code {

    private string ErrorMsg = string.Empty;

    #region Study group

    [Parameter]
    public int? StudyGroup { get; set; }

    #endregion

    #region User guid and setup

    private Guid UserGuid { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender || UserGuid.Equals(Guid.Empty))
        {
            Guid? guid = await Storage.GetUserGuidOrNullAsync();

            if (guid.HasValue)
            {
                UserGuid = guid.Value;
            }
            else
            {
                // TODO
                //NavigationManager.NavigateTo("Introduction");
                await JsRuntime.InvokeVoidAsync("alert", "DEBUG: No guid in the SessionStorage.");
            }

            bool isValidStudyGroup = await SurveyService
                .IsTheUserAllocatedGroupAsync(UserGuid, StudyGroup);

            if (!isValidStudyGroup)
            {
                // TODO: Navigate to an error page explaining what's wrong
                //NavigationManager.NavigateTo("InvalidStudy");#
                await JsRuntime.InvokeVoidAsync("alert", "DEBUG: Invalid study number.");
            }
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    #endregion

    #region Evaluation

    private List<EvalScenario> Rounds = new();
    private List<EvalResponse> Responses = new();

    protected override async Task OnInitializedAsync()
    {
        Rounds = await SurveyService.GetEvaluationRoundsAsync(isRandomOrder: true);
        Responses = await SurveyService.GetEvaluationResponsesAsync(isRandomOrder: true);

        await base.OnInitializedAsync();
    }

    #endregion
}
